@import url('https://fonts.googleapis.com/css?family=Fascinate');
@import url('https://fonts.googleapis.com/css?family=Pacifico');
@import url('https://fonts.googleapis.com/css?family=Lato');

body
{
    background: #FFFFFF;
    width: 100%;
    height: 100%;
    padding: 0px;
    margin: 0px;
 }

#background
{
    position: fixed;
    background: url("../img/playstation-pattern.png");
    animation: 200s scroll infinite linear;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    
    /*If you want header to be scrolled as well; don't
        forget to comment out scrolling under (#results)*/
    overflow: scroll;
    overflow-x: hidden;
}

@keyframes scroll
{
  100%
    {
        background-position:0px -3000px;
    }
}

#header
{
    position: relative;
    top: 0;
    left: 0;
    
    /*NOTE to self
        Wonder why couldn't use height as percentage, but could for width
        when #header was outside #background. Yet, px is used for height
        just to avoid compression when window resized
    */
    height: 150px;      
    width: 100%;
    
}

#logo
{
    position: relative;     /*relative in heigth and width to parent (#header)*/
    top: 0%;
    left: 14%;
    right: 100%;
    
    /*Careful! Making the height and width here percentages means that
        all the child with absolute (thus relative in position) will change their positions
        when window resized because #logo itself changes its width and height as they are 
        percentages. NOTE, even though width of #header is relative, everything stays
        in place even when window resizing because top and left are set to 0
    */
    height: 100px;
    width: 250px;
    
    margin: 0px 0px 0px 0px;
}

#logo h1
{    
    position: absolute;     /*absolute as in position relative to parent (#logo)*/
    top: 0%;
    left: 0%;
    margin: 0px;
    
    font-family: 'Fascinate';
    font-size: 450%;
    font-weight: normal;
    
    -webkit-background-clip: text !important;
    color: transparent;
    
    text-shadow: 0px 1px 0px rgba(255,255,255,0);
}

#logo h2
{   
    /*Because parent logo has width and height set in px, here leaveing top and bottom
        with percentage values is safe as in resizing the window won't relocate the element
    */
    position: absolute;     /*absolute as in position relative to parent (#logo)*/
    top: 42%;
    left: 70%;
    margin: 0px;
    
    font-family: 'Pacifico';
    font-size: 150%;
    font-weight: normal;
    
    color: dimgray;
}

#search
{
    position: absolute;     /*absolute as in position relative to parent (#header)*/
    
    /*Resorted to pixels because #search must be away by a certain amount in top and left
        from the boundaries of (#header), however, #header has its width 100% because we 
        we want to guarantee that it fills the entire width of the screen on the screen, thus
        there is no escaping the location of (#search) changing when window resizing except
        by setting top and left with fixed px amounts and not percentages
    */
    top: 65%;
    left: 14%;
    
    font-family: "Lato";
}

.typeahead, .tt-query, .tt-hint 
{    
    /*Somehow there are so many things atuomatically set
        like position being set to relative - maybe it has to do
        with twitter's tyepahead.js, though doubtful*/
    
    width: 30vw; 
    padding: 12px 45px 12px 20px;
    
    margin-bottom: 20px; 
    
    border: none;
    border-radius: 2px;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);
    
    font-size: 17px; 
}

.typeahead 
{
	background-color: #FFFFFF;
}

.typeahead:hover, .typeahead:focus 
{
    outline: none;
    box-shadow: 0 3px 8px 0 rgba(0,0,0, 0.2), 0 0 0 1px rgba(0,0,0, 0.08);
}

.tt-query 
{
	/*box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;*/
}

.tt-hint 
{
	/*color: #999999;*/
}

.tt-menu 
{  
    border: 1px solid #ddd;
    margin-top: -1px; 
    background-color: #f6f6f6; 
    
    padding: 0px 0px 0px 0px;
    width: 99%;
}

.tt-suggestion 
{
    padding: 13px; 
    text-decoration: none;
    font-size: 16px; 
    color: black; 
}


.tt-suggestion:hover    /*For mouse hover in suggestion*/
{
    cursor: pointer;
    background-color: #EEEEEE;
    color: #000000;
}

.tt-cursor      /*For arrows keys in suggestion*/
{
    background-color: #EEEEEE;
}

.tt-suggestion p 
{
	/*margin: 0;*/
}

.search_btn
{
    /*icon image relative to '.typehead', because it's position
        is set relative*/
    position: absolute;
    top: 19%;
    
    /*Safe to use px even though responsive, because of absolute child and relative     parent. Infact, px better because we want search button to be fixed in
        search bar*/
    right: 12px;
    
    width: 20px;
    height: 20px;    
}

#results
{
    position: relative;
    
    /*Don't want height to change with window resizing, thus px*/
    top: 0px;
    padding-top: 0px;
    
    /* Commented out because width set to 100% instead of 500px;
    left: 50%;     /*Want the list to keep relocating as window resized, thus %* /
    transform: translate(-50%);
    */
    
    /*
        100% for entire height of page
        100px is height of header
    */
    height: calc(100% - 100px);   
    width: 100%;
            
    font-family: "Lato";
    
    /*If you don't want header to be scrolled; don't
        forget to comment out scrolling under (#background)*/
    /*
    overflow: scroll;
    */
}

.result_list
{
    position: relative;
    padding: 0px;
    left: 50%;
    transform: translate(-50%);
    
    /*
        100% is entire width of page
        16.5% is distance of search bar from left + some more
        16.5% one more time for the right side
    */
    width: calc(100% - 16.5% - 16.5%);
    
    background-color: white;
    
    border: none;
    border-radius: 2px;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);
    
    padding: 10px 0px 10px 0px;
}

.result_record
{
    position: relative;
    
    list-style: none;
    
    /*Precentages for responsive web design*/
    
    height: 15%;
    
    padding: 10px 20% 10px 4%;
    margin: 0px 0px 1% 0px;
}

.result_title
{
    padding: 0px 0px 0px 0px;
        
    font-size: 18px;
    font-weight: bold;
}

.result_title a
{
    text-decoration: none;
    
    color: mediumblue;
}

.result_title a:hover
{
    cursor: pointer;
    
    text-decoration: underline;
}

.result_details
{
    padding: 0px 0px 0px 0px;
    
    list-style: none;
}

.result_link
{    
    padding: 4px 0px 0px 0px;
    
    color: green;
}

.result_description
{
    padding: 4px 0px 0px 0px;
}

#pages
{
    /*
        Careful! If position set to absolute as in to be relative to parent
        (#results) that has position set as relative, then position of this
        child (#pagination) will indeed be relative in position, BUT, notice
        that (#results) has top:0px, and so (#pagination) will be relative to
        the very top because the top of its parent is at 0px. Therefore, 
        the position has to be relative, just like (#results).
    */
    position: relative;
    top: 2%;
    
    height: 150px;
    width: 100%;
}
    
.pagination
{  
    position: absolute;
    left: 50%;
    top: 5%;
    transform: translate(-50%);
    
    padding: 0px;
    margin: 0px;
}

.pagination li
{
    display: inline-block;
    
    margin: 10px;

    width: 40px;
    height: 40px;
    
    font-family: "Lato";
    line-height: 38px;
    text-align: center;
    
    background-color: white;
    border-radius: 10%;
    border: 1px solid dimgray;
}

.pagination li.active
{
    background-color: dimgray;
    color: #FFFFFF;
}

.pagination a
{    
    text-decoration: none;
    color: dimgray;
}

.pagination li.active a
{
    color: white;
}

.pagination li:hover
{
    cursor: pointer;
}